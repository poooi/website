pool:
  vmImage: 'ubuntu-latest'

variables:
  CI: true
  YARN_CACHE_FOLDER: $(Pipeline.Workspace)/.yarn
  THIS_MONTH: $[format('{0:yyyyMM}', pipeline.startTime)]

trigger:
  branches:
    include:
    - '*'
  tags:
    include:
    - '*'

steps:
- checkout: self
  fetchDepth: 1

- task: NodeTool@0
  inputs:
    versionSpec: '>=12.3.1'
  displayName: 'Install Node.js'

- task: Cache@2
  inputs:
    key: $(THIS_MONTH) | yarn | $(Agent.OS) | yarn.lock
    path: $(YARN_CACHE_FOLDER)
    restoreKeys: |
      $(THIS_MONTH) | yarn | $(Agent.OS)
      $(THIS_MONTH) | yarn
  displayName: Cache Yarn packages

- script: |
    yarn install --frozen-lockfile
  displayName: 'yarn install'

- script: |
    yarn lint
  displayName: 'Lint'

- script: |
    yarn typecheck
  displayName: 'Typecheck'

- script: |
    yarn test:ci
  displayName: 'Unit test'

- script: |
    yarn cy:ci
  displayName: 'Cypress test'

- script: |
    yarn build
  displayName: 'Build'

- task: CopyFiles@2
  inputs:
    targetFolder: '$(Build.ArtifactStagingDirectory)'
    Contents: build/**/*

- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)'
    artifactName: drop

- task: PublishTestResults@2
  condition: succeededOrFailed()
  inputs:
    testRunner: JUnit
    testResultsFiles: '**/junit.xml'

- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/cobertura-coverage.xml'
    reportDirectory: '$(System.DefaultWorkingDirectory)/**/coverage'

- script: |
    cat ./coverage/lcov.info | yarn coveralls
  displayName: 'Publish code coverage to Coveralls'
  continueOnError: true
  env:
    COVERALLS_REPO_TOKEN: $(coverageServiceToken)
